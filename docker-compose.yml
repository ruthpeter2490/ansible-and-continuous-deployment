version: '3'

services:

  #docker dind (docker inside docker)
  jenkins-docker:
    image: docker:dind
    container_name: jenkins-docker
    privileged: true
    environment:
      - DOCKER_TLS_CERTDIR=/certs
    networks:
      - jenkins-network
    volumes:
      - jenkins-docker-certs:/certs/client
      - jenkins-petclinic-data-1:/var/jenkins_home
      - petclinic-war-1:/app
    ports:
      - "3000:3000"
      - "2376:2376"

  #jenkins container
  jenkins:
    build:
      context: ./jenkins
      dockerfile: Dockerfile
    container_name: jenkins
    hostname: jenkins
    volumes:
      - jenkins-petclinic-data-1:/var/jenkins_home
    networks:
      - jenkins-network
    ports:
      - "8080:8080"
    environment:
      - JENKINS_ADMIN_ID=admin 
      - JENKINS_ADMIN_PASSWORD=admin

  #ansible container
  ansible:
    build:
      context: ./ansible
      dockerfile: Dockerfile
    container_name: ansible
    hostname: ansible
    command: tail -f /dev/null
    volumes: 
      - petclinic-war-1:/app
    ports:
      - "8086:8086"
    networks:
      - jenkins-network

  #production server container
  server:
    image: openjdk:17-jdk-slim
    build:
      context: ./petjar
      dockerfile: Dockerfile
    hostname: server
    container_name: server
    command: tail -f /dev/null
    volumes: 
      - petclinic-war-1:/app
      - jenkins-petclinic-data-1:/var/jenkins_home

    ports:
      - "8082:8080"
      - "2222:22"
    networks:
      - jenkins-network
    depends_on:
      - ansible


#networks
networks:
  jenkins-network:
    driver: bridge 

#volumes
volumes:
  jenkins-petclinic-data-1:
  jenkins-docker-certs:
  petclinic-war-1: